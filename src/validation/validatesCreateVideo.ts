import {CreateVideoModel} from "../models";import {IValidationError} from "../interfaces/ValidationError";import {VideoQualityEnum} from "../constants/enum";export const validatesCreateVideo = (data: CreateVideoModel): IValidationError[] => {    const errors: IValidationError[] = [];    if (        !data.title ||        typeof data.title !== "string" ||        data.title.length > 40    ) {        errors.push({            message: 'Invalid title',            field: 'title',        });    }    if (        !data.author ||        typeof data.author !== "string" ||        data.author.length > 20    ) {        errors.push({            message: 'Invalid author',            field: 'author',        });    }    if (!Array.isArray(data.availableResolutions)) {        errors.push({            message: 'availableResolutions must be array',            field: 'availableResolutions',        });    } else if (data.availableResolutions.length < 1) {        errors.push({            message: 'At least one resolution should be added',            field: 'availableResolutions',        });    } else {        const videoQualities = Object.values(VideoQualityEnum);        for (const resolution of data.availableResolutions) {            if (!videoQualities.includes(resolution)) {                errors.push({                    message: 'Invalid resolution: ' + resolution,                    field: 'features',                });                break;            }        }    }    return errors;};